import { IsString, IsNumber, IsBoolean, IsDate, IsOptional, IsEnum, ApiProperty } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class Create${BusinessName}Dto {

#foreach($column in $columns)
  #if($column.isRequired == '1')
  @ApiProperty({ required: true, description: '${column.columnComment}' })
  $getValidatorDecorator($column.javaType)
  $column.javaField: $getTsType($column.javaType);
  #else
  @ApiProperty({ required: false, description: '${column.columnComment}' })
  @IsOptional()
  $getValidatorDecorator($column.javaType)
  $column.javaField?: $getTsType($column.javaType);
  #end

#end
}

export class Update${BusinessName}Dto extends Create${BusinessName}Dto {

  @ApiProperty({ required: true, description: '主键' })
  @IsNumber()
  ${primaryKey}: number;

}

export class List${BusinessName}Dto {

#foreach($column in $columns)
  #if($column.isQuery != '1')
  #elseif($column.isRequired == '1')
  @ApiProperty({ required: true, description: '${column.columnComment}' })
  $getValidatorDecorator($column.javaType)
  $column.javaField: $getTsType($column.javaType);
  #else
  @ApiProperty({ required: false, description: '${column.columnComment}' })
  @IsOptional()
  $getValidatorDecorator($column.javaType)
  $column.javaField?: $getTsType($column.javaType);
  #end

#end
}
